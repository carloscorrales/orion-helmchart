apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fiware-orion.fullname" . }}
  labels:
    {{- include "fiware-orion.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fiware-orion.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fiware-orion.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fiware-orion.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "contextBroker", "-fg", {{- if .Values.service.port }} "-port", "{{ .Values.service.port }}", {{- end }}{{- if .Values.service.notificationMode }} "-notificationMode", "{{ .Values.service.notificationMode }}", {{- end }}{{- if .Values.service.httpTimeout }} "-httpTimeout", "{{ .Values.service.httpTimeout }}", {{- end }}{{- if .Values.service.multitenancy }}"-multiservice",{{- end }}{{- if .Values.service.disableMetrics }}"-disableMetrics",{{- end }}{{- if .Values.service.writeConcern }} "-writeConcern", "{{ .Values.service.writeConcern }}", {{- end }} "-logLevel", "INFO", "-dbhost", "{{ .Values.mongo.dbhost }}", {{- if .Values.mongo.replicaset }} "-rplSet", "{{ .Values.mongo.rs }}", {{- end }} "-dbTimeout", "10000", "-corsOrigin", "__ALL", "-reqMutexPolicy", "none" ]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /version
              port: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /v2
              port: {{ .Values.service.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
